name: Build & Deploy Rust for ARM (OCI)

on:
  push:
    branches:
      - main

jobs:
  build-arm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v4

      - name: Instalar cross
        run: cargo install cross

      - name: Compilar con cross para ARM64
        run: cross build --target=aarch64-unknown-linux-gnu --release

      - name: Subir binario como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: binario-arm
          path: target/aarch64-unknown-linux-gnu/release/gym-logs-api

  deploy:
    needs: build-arm
    runs-on: ubuntu-latest
    steps:
      - name: Descargar binario compilado
        uses: actions/download-artifact@v4
        with:
          name: binario-arm
          path: ./deploy

      - name: Configurar SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Subir binario al servidor
        run: scp ./deploy/gym-logs-api ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/opt/gym-logs-api

      - name: Reiniciar servicio en el servidor
        run: ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "sudo systemctl restart gym-logs-api"
